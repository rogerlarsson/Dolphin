| package |
package := Package name: 'Dolphin IDE Extension Example'.
package paxVersion: 2.1;
	preDeclareClassesOnLoad: false;
	basicComment: 'Dolphin Smalltalk IDE Extension Sample. 
Copyright (c) Object Arts Ltd, 2002.

This package demonstrates how to extend the standard IDE tools by the dynamic, programmatic, addition of commands to menus, without editing the view resources.

Two extensions are implemented:
1) A command is added to the Class Browser class comment workspace''s context menu to emit a standard format class comment.
2) A command is added to the help menu of all tools that generates and displays an HTML page  listing all accelerator key bindings for the tool.

These extensions can be turned on and off independently as options under ''Object Arts IDE Extensions'' in ''User Preferences''.
'.


package setClassNames: #(
	#{Tools.OAIDEExtensions}
).

package setMethodNames: #(
	#(#{Tools.ClassCommentPlugin} #emitClassLayoutDescription)
).

package setPrerequisites: #(
	'..\..\Dolphin\IDE\Base\Development System'
	'..\..\Dolphin\Base\Dolphin'
	'..\..\Dolphin\MVP\Presenters\Prompters\Dolphin Choice Prompter'
	'..\..\Dolphin\Base\Dolphin Message Box'
	'..\..\Dolphin\MVP\Base\Dolphin MVP Base'
	'..\..\Dolphin\ActiveX\Components\SHDocVw\Internet Explorer'
	'..\..\Dolphin\ActiveX\Persist\OLE Persistence Base'
	'..\..\Dolphin\ActiveX\Structured Storage\OLE Structured Storage'
).

package!

"Class Definitions"!

Core.Object subclass: #'Tools.OAIDEExtensions'
	instanceVariableNames: 'flags'
	classVariableNames: 'Current'
	imports: #(#{Smalltalk.SHDocVwConstants private})
	classInstanceVariableNames: ''
	classConstants: {
		'ClassCommentTemplateMask' -> 16r1.
		'KeyHelpMask' -> 16r2
	}!

"Loose Methods"!

!Tools.ClassCommentPlugin methodsFor!

emitClassLayoutDescription
	"Emits a description of the instance variables for the context class at the
	insertion point in the receiver."

	| desc |
	[desc := OAIDEExtensions current variableDescriptionsFor: self browser selectedClass]
		on: OperationAborted
		do: [:ex | ]
		on: Error
		do: [:ex | MessageBox errorMsg: ex description].
	desc isNil ifFalse: [textPresenter replaceSelection: desc]! !
!Tools.ClassCommentPlugin categoriesFor: #emitClassLayoutDescription!commands!development!public! !

"End of package definition"!

