| package |
package := Package name: 'Smalltalk Compiler'.
package paxVersion: 2.1;
	preDeclareClassesOnLoad: false;
	basicComment: ''.


package setClassNames: #(
	#{Kernel.StArgumentVariable}
	#{Kernel.StBlockScope}
	#{Kernel.StClassScope}
	#{Kernel.StEvalScope}
	#{Kernel.StGeneratedTempVariable}
	#{Kernel.StInstanceVariable}
	#{Kernel.StLexicalScope}
	#{Kernel.StLocalVariable}
	#{Kernel.StMethodScope}
	#{Kernel.StOptimizedBlockScope}
	#{Kernel.StSelfVariable}
	#{Kernel.StSemanticAnalyser}
	#{Kernel.StSemanticScope}
	#{Kernel.StSpecialVariable}
	#{Kernel.StStaticVariable}
	#{Kernel.StSuperVariable}
	#{Kernel.StTempVariable}
	#{Kernel.StThisContextVariable}
	#{Kernel.StVariable}
).

package setMethodNames: #(
	#(#{Kernel.StMethodNode} #analyze)
).

package setPrerequisites: #(
	'..\..\Base\Dolphin'
	'Smalltalk Parser'
).

package!

"Class Definitions"!

Core.Object subclass: #'Kernel.StSemanticScope'
	instanceVariableNames: 'outer'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Object subclass: #'Kernel.StVariable'
	instanceVariableNames: 'scope reads writes'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.ParseNodeVisitor subclass: #'Kernel.StSemanticAnalyser'
	instanceVariableNames: 'methodNode methodClass evaluationContext currentScope scopes literals stringLiterals addToFrame tempDecls inStaticExpression evalScope errorBlock'
	classVariableNames: 'OptimizedMessages RestrictedSelectors SpecialSelectors'
	imports: #(#{Kernel.ParseErrorCodes})
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.StSemanticScope subclass: #'Kernel.StClassScope'
	instanceVariableNames: 'methodClass instanceVariables selfVariable superVariable'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.StSemanticScope subclass: #'Kernel.StEvalScope'
	instanceVariableNames: 'pools'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.StSemanticScope subclass: #'Kernel.StLexicalScope'
	instanceVariableNames: 'locals node thisContextVariable flags'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'FarReturnMask' -> 16r2.
		'NeedsSelfMask' -> 16r1
	}!
Kernel.StLexicalScope subclass: #'Kernel.StBlockScope'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'EmptyBlockMask' -> 16r200.
		'NeedsOuterMask' -> 16r100
	}!
Kernel.StLexicalScope subclass: #'Kernel.StMethodScope'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.StBlockScope subclass: #'Kernel.StOptimizedBlockScope'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.StVariable subclass: #'Kernel.StInstanceVariable'
	instanceVariableNames: 'index name'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.StVariable subclass: #'Kernel.StLocalVariable'
	instanceVariableNames: 'node storage'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.StVariable subclass: #'Kernel.StSpecialVariable'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.StVariable subclass: #'Kernel.StStaticVariable'
	instanceVariableNames: 'binding'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.StLocalVariable subclass: #'Kernel.StArgumentVariable'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.StLocalVariable subclass: #'Kernel.StGeneratedTempVariable'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.StLocalVariable subclass: #'Kernel.StTempVariable'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.StSpecialVariable subclass: #'Kernel.StSelfVariable'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.StSpecialVariable subclass: #'Kernel.StSuperVariable'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.StSpecialVariable subclass: #'Kernel.StThisContextVariable'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

"Loose Methods"!

!Kernel.StMethodNode methodsFor!

analyze
	StSemanticAnalyser
		analyzeParseTree: self
		for: self methodClass
		context: nil
		pools: #()
		onError: nil! !
!Kernel.StMethodNode categoriesFor: #analyze!public! !

"End of package definition"!

