| package |
package := Package name: 'Development System Tests'.
package paxVersion: 2.1;
	preDeclareClassesOnLoad: false;
	basicComment: ''.


package setClassNames: #(
	#{Kernel.Tests.VMTest}
	#{OS.Tests.VersionResourceTest}
	#{Refactory.Browser.Tests.PackageEnvironmentTest}
	#{Refactory.Browser.Tests.PluggableEnvironmentTest}
	#{Refactory.Browser.Tests.RewriteTestCase}
	#{Smalltalk.XMLDOMNodeTest}
	#{Tools.Tests}
	#{Tools.Tests.KeyedAspectTest}
	#{Tools.Tests.ProductReleaseTest}
	#{Tools.Tests.SmalltalkSystemTest}
).

package setMethodNames: #(
	#(#{Kernel.Tests.ParserErrorTest} #testInfoHardBreakpoint)
	#(#{Kernel.Tests.ParserErrorTest} #testInfoSupersendsOther)
	#(#{Kernel.Tests.ParserErrorTest} #testInfoUnreferencedArg)
	#(#{Kernel.Tests.ParserErrorTest} #testWarningUsesBooleanClass)
	#(#{Kernel.Tests.ParserErrorTest} #testWarnMsgUnimplemented)
	#(#{Kernel.Tests.ParserErrorTest} #testWarnUndefinedSelector)
	#(#{Kernel.Tests.ParserErrorTest} #testWarnUnimplementedAbstractMethod)
).

package setPrerequisites: #(
	'..\..\..\Samples\MVP\Animal Game\Animals'
	'Development System'
	'..\..\Base\Dolphin'
	'..\..\Base\Dolphin Base Tests'
	'..\..\MVP\Base\Dolphin Basic Geometry'
	'..\..\MVP\Dialogs\Common\Dolphin Common Dialogs'
	'..\..\MVP\Base\Dolphin MVP Base'
	'..\..\Lagoon\Lagoon Image Stripper'
	'..\..\ActiveX\COM\OLE COM'
	'..\..\..\..\Contributions\Refactory\Refactoring Browser\Environments\RBEnvironments'
	'..\..\..\..\Contributions\Refactory\Refactoring Browser\SmallLint\RBSmallLint'
	'..\..\..\..\Contributions\Refactory\Refactoring Browser\Tests\RBTestMethods'
	'..\..\..\..\Contributions\Refactory\Refactoring Browser\Tests\RBTests'
	'..\..\System\Compiler\Smalltalk Compiler Tests'
	'..\..\..\..\Contributions\Camp Smalltalk\SUnit\SUnit'
	'..\..\..\..\Contributions\Camp Smalltalk\SUnit\SUnitPreload'
	'..\..\ActiveX\Components\XML DOM\XML DOM'
).

package!

"Class Definitions"!

Tools subclass: #'Tools.Tests'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{XProgramming.SUnit})
	classInstanceVariableNames: ''
	classConstants: {}!
XProgramming.SUnit.TestCase subclass: #'Refactory.Browser.Tests.RewriteTestCase'
	instanceVariableNames: 'env'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'Tools.Tests.KeyedAspectTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'Tools.Tests.ProductReleaseTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'Tools.Tests.SmalltalkSystemTest'
	instanceVariableNames: 'devsys'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'OS.Tests.VersionResourceTest'
	instanceVariableNames: 'updatePath sourceModule sourceSize sourceBytes'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'Kernel.Tests.VMTest'
	instanceVariableNames: 'expiryHandler'
	classVariableNames: ''
	imports: #(#{OS.CRTConstants})
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #XMLDOMNodeTest
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Refactory.Browser.Tests.BrowserEnvironmentTest subclass: #'Refactory.Browser.Tests.PackageEnvironmentTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Refactory.Browser.Tests.BrowserEnvironmentTest subclass: #'Refactory.Browser.Tests.PluggableEnvironmentTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

"Loose Methods"!

!Kernel.Tests.ParserErrorTest methodsFor!

testInfoHardBreakpoint
	semanticAnalyserClass := Tools.BrowserSemanticAnalyser.
	#(#testInfoHardBreakpoint #testInfoHardBreakpointInBlock) do: 
			[:each | 
			self 
				parseMethodInfo: each
				rangeBlock: 
					[:source | 
					| start |
					start := source indexOfSubCollection: 'self halt'.
					start to: start + 8]
				code: CInfoHardBreakpoint]!

testInfoSupersendsOther
	semanticAnalyserClass := Tools.BrowserSemanticAnalyser.
	#(#testInfoSupersendsOther) do: 
			[:each | 
			self 
				parseMethodInfo: each
				rangeBlock: 
					[:source | 
					| start |
					start := source indexOfSubCollection: 'super'.
					start 
						to: (source 
								nextIndexOf: Character cr
								from: start
								to: source size) - 1]
				code: CInfoSupersendsOther]!

testInfoUnreferencedArg
	semanticAnalyserClass := Tools.BrowserSemanticAnalyser.
	#(#testInfoUnreferencedArgBlock #testInfoUnreferencedArgMethod: #testInfoUnreferencedArgOptimizedBlock) 
		do: 
			[:each | 
			self 
				parseMethodInfo: each
				rangeBlock: 
					[:source | 
					| start |
					start := source lastIndexOf: $a.
					start to: start]
				code: CInfoUnreferencedArg]!

testWarningUsesBooleanClass
	semanticAnalyserClass := Tools.BrowserSemanticAnalyser.
	#(#testWarningUsesTrue #testWarningUsesFalse) do: 
			[:each |
			self
				parseMethodWarning: each
				rangeBlock: 
					[:source |
					| start name |
					name := each asPhrase subStrings last.
					start := source indexOfSubCollection: name startingAt: each size + 1.
					start to: start + name size - 1]
				code: CWarnUsesBooleanClass]!

testWarnMsgUnimplemented
	semanticAnalyserClass := Tools.BrowserSemanticAnalyser.
	#(#testWarnMsgUnimplementedBySelf #testWarnMsgUnimplementedBySuper #testWarnMsgUnimplementedByConst #testWarnMsgUnimplementedByNil)
		do: 
			[:each |
			self
				parseMethodWarning: each
				rangeBlock: 
					[:source |
					| start name |
					name := each asPhrase subStrings last.
					start := source
								findString: name
								startingAt: each size + 1
								ignoreCase: true.
					start to: (source
								nextIndexOf: $.
								from: start
								to: source size) - 1]
				code: CWarnMsgUnimplemented]!

testWarnUndefinedSelector
	semanticAnalyserClass := Tools.BrowserSemanticAnalyser.
	#(#testWarnUndefinedSelector) do: 
			[:each |
			self
				parseMethodWarning: each
				rangeBlock: 
					[:source |
					| start |
					start := source indexOfSubCollection: 'self'.
					start to: (source
								nextIndexOf: $.
								from: start
								to: source size) - 1]
				code: CWarnUndefinedSelector]!

testWarnUnimplementedAbstractMethod
	semanticAnalyserClass := Tools.BrowserSemanticAnalyser.
	#(#testWarnUnimplementedAbstractMethod) do: 
			[:each |
			self
				parseMethodWarning: each
				rangeBlock: 
					[:source |
					| start msg |
					msg := 'self subclassResponsibility'.
					start := source indexOfSubCollection: msg.
					start to: start + msg size - 1]
				code: CWarnUnimplementedAbstractMethod]! !
!Kernel.Tests.ParserErrorTest categoriesFor: #testInfoHardBreakpoint!public!unit tests! !
!Kernel.Tests.ParserErrorTest categoriesFor: #testInfoSupersendsOther!public!unit tests! !
!Kernel.Tests.ParserErrorTest categoriesFor: #testInfoUnreferencedArg!public!unit tests! !
!Kernel.Tests.ParserErrorTest categoriesFor: #testWarningUsesBooleanClass!public!unit tests! !
!Kernel.Tests.ParserErrorTest categoriesFor: #testWarnMsgUnimplemented!public!unit tests! !
!Kernel.Tests.ParserErrorTest categoriesFor: #testWarnUndefinedSelector!public!unit tests! !
!Kernel.Tests.ParserErrorTest categoriesFor: #testWarnUnimplementedAbstractMethod!public!unit tests! !

"End of package definition"!

