| package |
package := Package name: 'Dolphin Base Tests'.
package paxVersion: 2;
	preDeclareClassesOnLoad: false;
	basicComment: ''.


package setClassNames: #(
	#{AbstractBindingReferenceTest}
	#{AbstractDictionaryTest}
	#{AbstractFileStreamTest}
	#{AbstractKeyboardTest}
	#{AlwaysSearchPolicyTest}
	#{AnsiStringTest}
	#{ArrayedCollectionTest}
	#{ArrayTest}
	#{AssociationTest}
	#{BagTest}
	#{BehaviorTest}
	#{BehaviorTestClasses}
	#{BindingReferenceTest}
	#{BlockClosureTest}
	#{BooleanTest}
	#{ByteArrayTest}
	#{CaseInsensitiveSearchPolicyTest}
	#{CharacterTest}
	#{ClassBuilderTestClasses}
	#{ClassBuilderTests}
	#{ClassDescriptionTest}
	#{ClassTest}
	#{CollectionCombinator}
	#{CommandLineTest}
	#{CommandLineTestRunner}
	#{DateAndTimeTest}
	#{DateTest}
	#{DefaultSortAlgorithmTest}
	#{DictionaryTest}
	#{DiskVolumeInformationTest}
	#{DolphinCollectionTest}
	#{DolphinTest}
	#{DolphinTestClassResource}
	#{DolphinTestPackages}
	#{DolphinTestResource}
	#{DOUBLEArrayTest}
	#{DurationTest}
	#{DWORDArrayTest}
	#{EqualitySearchPolicyTest}
	#{EventMessageSendTest}
	#{ExceptionTesterClasses}
	#{ExternalAddressTest}
	#{ExternalArrayTest}
	#{ExternalDescriptorTest}
	#{ExternalFieldTest}
	#{ExternalLibraryTest}
	#{ExternalResourceLibraryTest}
	#{ExternalStructureTest}
	#{FalseTest}
	#{FileLocatorTest}
	#{FileStreamTest}
	#{FileTest}
	#{FILETIMETest}
	#{FLOATArrayTest}
	#{FloatTest}
	#{GenericExternalArrayTest}
	#{GUIDTest}
	#{HeapsortAlgorithmTest}
	#{HRESULTTest}
	#{IdentityDictionaryTest}
	#{IdentitySearchPolicyTest}
	#{InsertionSortAlgorithmTest}
	#{IntegerTest}
	#{IntervalTest}
	#{IntrosortAlgorithmTest}
	#{KeyboardTest}
	#{LargeIntegerTest}
	#{LimitedWriteStreamTest}
	#{LocaleTest}
	#{LookupTableTest}
	#{MemoryManagerTest}
	#{MergesortAlgorithmTest}
	#{MetaBindingReferenceTest}
	#{MetaclassTest}
	#{MethodDictionaryTest}
	#{MustBeBooleanTestClasses}
	#{NeverSearchPolicyTest}
	#{NumberTest}
	#{ObjectTest}
	#{OrderedCollectionTest}
	#{PackageTest}
	#{PoolConstantsDictionaryTest}
	#{PositionableStreamTest}
	#{ProcessTest}
	#{PropertyManagerTest}
	#{QuicksortAlgorithmTest}
	#{ReadStreamTest}
	#{ReadWriteStreamTest}
	#{RunArrayTest}
	#{ScaledDecimalTest}
	#{SDWORDArrayTest}
	#{SearchPolicyTest}
	#{SemaphoreTest}
	#{SequenceableCollectionTest}
	#{SequencedGrowableCollectionTest}
	#{SessionManagerTest}
	#{SetTest}
	#{ShellsortAlgorithmTest}
	#{ShlwapiLibraryTest}
	#{SignalTest}
	#{SmallIntegerTest}
	#{SmalltalkLocaleTest}
	#{SortAlgorithmTest}
	#{SortedCollectionTest}
	#{StableSortAlgorithmTest}
	#{STBTest}
	#{StdioFileStreamTest}
	#{StreamTest}
	#{StringTest}
	#{StructureArrayTest}
	#{SWORDArrayTest}
	#{SymbolTest}
	#{SystemDictionaryTest}
	#{TestRunConsoleLogger}
	#{TestRunLogger}
	#{TimeStampTest}
	#{TimeTest}
	#{TrueTest}
	#{UndefinedObjectTest}
	#{Utf16StringTest}
	#{Utf8StringTest}
	#{UtfEncodedStringTest}
	#{WCHARFieldTest}
	#{WindowsLocaleTest}
	#{WORDArrayTest}
	#{WriteStreamTest}
).

package setMethodNames: #(
	#(#{SmalltalkSystem} #baselinedSlowTests)
	#(#{SmalltalkSystem} #regressionTestsLogFilename)
	#(#{SmalltalkSystem} #regressionTestSuite)
	#(#{SmalltalkSystem} #runRegressionTests)
	#(#{SmalltalkSystem} #runRegressionTests:logTo:verbose:)
	#(#{SmalltalkSystem} #setTestAttributes:id:name:duration:tests:failures:errors:skipped:)
	#(#{SmalltalkSystem} #writeJunitTestLog:result:)
).

package setPrerequisites: #(
	'..\ActiveX\Components\Scripting\ActiveX Scripting'
	'..\IDE\Base\Development System'
	'Dolphin'
	'Dolphin Additional Sort Algorithms'
	'Dolphin Anonymous Classes'
	'Dolphin Command-line Parser'
	'..\System\Random\Dolphin CRT Random Stream'
	'Dolphin Legacy Date & Time'
	'Dolphin Message Box'
	'..\MVP\Base\Dolphin MVP Base'
	'..\System\Random\Dolphin Random Stream'
	'..\Registry\Dolphin Registry Access'
	'..\System\Compiler\Smalltalk Parser'
	'..\..\..\Contributions\Camp Smalltalk\SUnit\SUnit'
	'..\ActiveX\Components\XML DOM\XML DOM'
).

package setManualPrerequisites: #(
	'Dolphin Anonymous Classes'
).

package!

"Class Definitions"!

Object subclass: #CollectionCombinator
	instanceVariableNames: 'resultProcessingBlock collectionOfArrays buffer'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
Object subclass: #CommandLineTestRunner
	instanceVariableNames: 'results lastCase loggers verbose'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
Object subclass: #TestRunLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
TestCase subclass: #CommandLineTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
TestCase subclass: #DolphinTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #AbstractBindingReferenceTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #AbstractKeyboardTest
	instanceVariableNames: 'savedLayout'
	classVariableNames: ''
	poolDictionaries: 'Win32Constants'
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #AssociationTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #BagTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #BehaviorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #BlockClosureTest
	instanceVariableNames: 'x'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #BooleanTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #CharacterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ClassBuilderTests
	instanceVariableNames: 'wasOAD'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ClassDescriptionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #DateAndTimeTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #DateTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #DiskVolumeInformationTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #DolphinCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #DurationTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #EventMessageSendTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ExternalAddressTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ExternalArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ExternalDescriptorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'ExtCallArgTypes'
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ExternalFieldTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ExternalLibraryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ExternalResourceLibraryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ExternalStructureTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #FalseTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #FileLocatorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #FileTest
	instanceVariableNames: 'tempFile'
	classVariableNames: ''
	poolDictionaries: 'Win32Constants'
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #FILETIMETest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #FloatTest
	instanceVariableNames: 'fpeMask'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #GUIDTest
	instanceVariableNames: ''
	classVariableNames: 'Default'
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #HRESULTTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #IntegerTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #LocaleTest
	instanceVariableNames: 'savedLocale'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #MemoryManagerTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #NumberTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ObjectTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #PackageTest
	instanceVariableNames: 'loadedPackages checkTimestamps'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #PoolConstantsDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ProcessTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #PropertyManagerTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ScaledDecimalTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #SearchPolicyTest
	instanceVariableNames: 'policy'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #SemaphoreTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #SessionManagerTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ShlwapiLibraryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #SignalTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #SortAlgorithmTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #STBTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #StreamTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #SystemDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #TimeStampTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #TimeTest
	instanceVariableNames: 'savedLocale'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #TrueTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #UndefinedObjectTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
AbstractBindingReferenceTest subclass: #BindingReferenceTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
AbstractBindingReferenceTest subclass: #MetaBindingReferenceTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
AbstractKeyboardTest subclass: #KeyboardTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ClassDescriptionTest subclass: #ClassTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ClassDescriptionTest subclass: #MetaclassTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinCollectionTest subclass: #AbstractDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinCollectionTest subclass: #SequenceableCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinCollectionTest subclass: #SetTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
AbstractDictionaryTest subclass: #DictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
AbstractDictionaryTest subclass: #LookupTableTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
AbstractDictionaryTest subclass: #MethodDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
LookupTableTest subclass: #IdentityDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SequenceableCollectionTest subclass: #ArrayedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SequenceableCollectionTest subclass: #IntervalTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SequenceableCollectionTest subclass: #SequencedGrowableCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ArrayedCollectionTest subclass: #ArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ArrayedCollectionTest subclass: #ByteArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ArrayedCollectionTest subclass: #RunArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ArrayedCollectionTest subclass: #StringTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
StringTest subclass: #AnsiStringTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
StringTest subclass: #UtfEncodedStringTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
UtfEncodedStringTest subclass: #Utf16StringTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
UtfEncodedStringTest subclass: #Utf8StringTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
Utf8StringTest subclass: #SymbolTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SequencedGrowableCollectionTest subclass: #OrderedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
OrderedCollectionTest subclass: #SortedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ExternalArrayTest subclass: #DOUBLEArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ExternalArrayTest subclass: #DWORDArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ExternalArrayTest subclass: #FLOATArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ExternalArrayTest subclass: #GenericExternalArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ExternalArrayTest subclass: #SDWORDArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ExternalArrayTest subclass: #SWORDArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ExternalArrayTest subclass: #WORDArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GenericExternalArrayTest subclass: #StructureArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ExternalFieldTest subclass: #WCHARFieldTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
IntegerTest subclass: #LargeIntegerTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
IntegerTest subclass: #SmallIntegerTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
LocaleTest subclass: #SmalltalkLocaleTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
LocaleTest subclass: #WindowsLocaleTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SearchPolicyTest subclass: #AlwaysSearchPolicyTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SearchPolicyTest subclass: #CaseInsensitiveSearchPolicyTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SearchPolicyTest subclass: #EqualitySearchPolicyTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SearchPolicyTest subclass: #IdentitySearchPolicyTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SearchPolicyTest subclass: #NeverSearchPolicyTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SortAlgorithmTest subclass: #DefaultSortAlgorithmTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SortAlgorithmTest subclass: #HeapsortAlgorithmTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SortAlgorithmTest subclass: #IntrosortAlgorithmTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SortAlgorithmTest subclass: #QuicksortAlgorithmTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SortAlgorithmTest subclass: #ShellsortAlgorithmTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SortAlgorithmTest subclass: #StableSortAlgorithmTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
StableSortAlgorithmTest subclass: #InsertionSortAlgorithmTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
StableSortAlgorithmTest subclass: #MergesortAlgorithmTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
StreamTest subclass: #PositionableStreamTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
PositionableStreamTest subclass: #ReadStreamTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
PositionableStreamTest subclass: #ReadWriteStreamTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
PositionableStreamTest subclass: #WriteStreamTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ReadWriteStreamTest subclass: #AbstractFileStreamTest
	instanceVariableNames: 'tempFileName filestream'
	classVariableNames: 'RandomData1 RandomData2'
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
AbstractFileStreamTest subclass: #FileStreamTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
AbstractFileStreamTest subclass: #StdioFileStreamTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
WriteStreamTest subclass: #LimitedWriteStreamTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
TestResource subclass: #DolphinTestResource
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTestResource subclass: #DolphinTestClassResource
	instanceVariableNames: 'package'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTestResource subclass: #DolphinTestPackages
	instanceVariableNames: 'a b c'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTestClassResource subclass: #BehaviorTestClasses
	instanceVariableNames: 'classWithAbstractMethod1 classWithAbstractMethod2'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTestClassResource subclass: #ClassBuilderTestClasses
	instanceVariableNames: 'testClass testSubclass1 testSubclass2 testPool1 testPool2 testPool3'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTestClassResource subclass: #ExceptionTesterClasses
	instanceVariableNames: 'testNotificationClass resumableErrorClass testErrorClass'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTestClassResource subclass: #MustBeBooleanTestClasses
	instanceVariableNames: 'trueClass falseClass'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
TestRunLogger subclass: #TestRunConsoleLogger
	instanceVariableNames: 'stream timings'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!

"Loose Methods"!

!SmalltalkSystem methodsFor!

baselinedSlowTests
	| laggards |
	laggards := Set new.
	#(#(#{ReferenceFinderTest} #(#testAllPaths #testAllPathsToInstance #testNotFound)) #(#{BrowserEnvironmentTest} #(#testOrEnvironment)) #(#{IdeaSpaceShellTest} #(#testSaveRestore)) #(#{RenameClassTest} #(#testModelRenameClass)))
		do: 
			[:each |
			each first
				ifDefined: [:test | each second do: [:selector | laggards add: (test selector: selector)]]].
	^laggards!

regressionTestsLogFilename
	"Answer the name of the file in which to log test results, or nil to have the output sent to stdout"

	^nil
	"^File default: SessionManager current imagePath extension: 'testlog'"!

regressionTestSuite
	| suite |
	suite := TestSuite named: 'RegressionTests'.
	suite addTests: TestCase buildSuite allTests asSortedCollection.
	^suite!

runRegressionTests
	| suite filename |
	filename := self regressionTestsLogFilename.
	suite := self regressionTestSuite.
	^filename isNil
		ifTrue: 
			[self
				runRegressionTests: suite
				logTo: SessionManager current stdout
				verbose: true]
		ifFalse: 
			[| logStream |
			logStream := FileStream write: filename.
			
			[self
				runRegressionTests: suite
				logTo: logStream
				verbose: true]
					ensure: [logStream close]]!

runRegressionTests: aTestSuite logTo: logStream verbose: aBoolean
	| result |
	result := (CommandLineTestRunner new)
				addLogger: (TestRunConsoleLogger on: logStream);
				verbose: aBoolean;
				runSuite: aTestSuite knownSlowTests: self baselinedSlowTests.
	self writeJunitTestLog: aTestSuite result: result.
	^result!

setTestAttributes: suitesNode id: idInteger name: suiteName duration: aDuration tests: testsInteger failures: failuresInteger errors: errorsInteger skipped: skippedInteger
	| stream attribs |
	attribs := suitesNode attributes.
	idInteger ifNotNil: [attribs at: 'id' put: idInteger].
	stream := String writeStream.
	aDuration asSeconds asFloat printOn: stream decimalPlaces: 6.
	attribs
		at: 'name' put: suiteName;
		at: 'tests' put: testsInteger displayString;
		at: 'errors' put: errorsInteger displayString;
		at: 'failures' put: failuresInteger displayString;
		at: 'skipped' put: skippedInteger displayString;
		at: 'time' put: stream contents;
		free!

writeJunitTestLog: aTestSuite result: aTestResult
	| doc suitesNode currentId currentClass suiteNode classTests classErrors classFailures classSkipped classElapsed caseAttribs suiteName testsInteger errorsInteger failuresInteger skippedInteger duration |
	suiteName := aTestSuite name ?? 'RegressionTests'.
	doc := IXMLDOMDocument3 new.
	suitesNode := doc addElement: 'testsuites'.
	duration := aTestResult duration.
	testsInteger := aTestResult runCount.
	errorsInteger := aTestResult errorCount.
	failuresInteger := aTestResult failureCount.
	skippedInteger := aTestResult skippedCount.
	self
		setTestAttributes: suitesNode
		id: nil
		name: suiteName
		duration: duration
		tests: testsInteger
		failures: failuresInteger
		errors: errorsInteger
		skipped: skippedInteger.
	currentId := classTests := classErrors := classFailures := classSkipped := 0.
	classElapsed := Duration zero.
	currentClass := nil.
	suiteNode := nil.
	(aTestResult results asSortedCollection: [:a :b | a case <= b case]) do: 
			[:each |
			| caseNode outcome |
			each case class == currentClass
				ifFalse: 
					[suiteNode
						ifNotNil: 
							[self
								setTestAttributes: suiteNode
								id: currentId
								name: currentClass name
								duration: classElapsed
								tests: classTests
								failures: classFailures
								errors: classErrors
								skipped: classSkipped.
							suiteNode free].
					currentClass := each case class.
					classTests := classErrors := classFailures := classSkipped := 0.
					classElapsed := Duration zero.
					suiteNode := suitesNode addElement: 'testsuite'.
					currentId := currentId + 1].
			classTests := classTests + 1.
			classElapsed := classElapsed + each duration.
			caseNode := suiteNode addElement: 'testcase'.
			caseAttribs := caseNode attributes.
			caseAttribs
				at: 'name' put: each case selector;
				at: 'classname' put: currentClass name.
			outcome := each outcome.
			outcome == #passed
				ifTrue: 
					[caseAttribs at: 'time' put: (each duration printStringFormat: 'SFFFFFF')].
			outcome == #error
				ifTrue: 
					[| errorNode |
					classErrors := classErrors + 1.
					errorNode := caseNode addElement: 'error'.
					errorNode attributes
						at: 'message' put: each signal description;
						at: 'type' put: each signal class name;
						free.
					errorNode text: each diagnostic.
					errorNode free].
			outcome == #failed
				ifTrue: 
					[| failureNode |
					classFailures := classFailures + 1.
					failureNode := caseNode addElement: 'failure'.
					failureNode attributes
						at: 'message' put: each signal description;
						at: 'type' put: each signal class name;
						free.
					failureNode text: each diagnostic.
					failureNode free].
			outcome == #skipped
				ifTrue: 
					[| skippedNode |
					classSkipped := classSkipped + 1.
					skippedNode := caseNode addElement: 'skipped'.
					skippedNode attributes
						at: 'message' put: each signal description;
						free.
					skippedNode text: each stacktrace.
					skippedNode free].
			caseAttribs free.
			caseNode free].
	"Add the summary information for the final class"
	self
		setTestAttributes: suiteNode
		id: currentId
		name: currentClass name
		duration: classElapsed
		tests: classTests
		failures: classFailures
		errors: classErrors
		skipped: classSkipped.
	suiteNode free.
	suitesNode free.
	doc save: (File
				composePath: SessionManager current imageBase
				stem: suiteName
				extension: 'xml').
	doc free! !
!SmalltalkSystem categoriesFor: #baselinedSlowTests!accessing!public! !
!SmalltalkSystem categoriesFor: #regressionTestsLogFilename!public!tests! !
!SmalltalkSystem categoriesFor: #regressionTestSuite!private!tests! !
!SmalltalkSystem categoriesFor: #runRegressionTests!public!tests! !
!SmalltalkSystem categoriesFor: #runRegressionTests:logTo:verbose:!public!tests! !
!SmalltalkSystem categoriesFor: #setTestAttributes:id:name:duration:tests:failures:errors:skipped:!helpers!private! !
!SmalltalkSystem categoriesFor: #writeJunitTestLog:result:!helpers!private! !

"End of package definition"!

