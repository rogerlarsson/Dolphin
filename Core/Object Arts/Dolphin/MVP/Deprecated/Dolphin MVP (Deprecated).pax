| package |
package := Package name: 'Dolphin MVP (Deprecated)'.
package paxVersion: 2.1;
	preDeclareClassesOnLoad: false;
	basicComment: 'Dolphin Smalltalk Graphical User Interface framework (Deprecated Classes and Methods).

This package includes legacy classes and methods from Dolphin''s base package that have been deprecated. If you have no requirement to use code imported from pre-5.0 versions of Dolphin, then this package can be safely uninstalled.
'.

package basicPackageVersion: '6.2'.


package setClassNames: #(
	#{Smalltalk.ComparisonPolicy}
	#{Smalltalk.Msimg32Library}
	#{Smalltalk.MultipleSelectionListBox}
	#{Smalltalk.MultipleSelectionListView}
).

package setMethodNames: #(
	#(#{Graphics.ARGB} #asARGB)
	#(#{Graphics.Brush class} #dkGray)
	#(#{Graphics.Brush class} #hatchedDiagonal)
	#(#{Graphics.Brush class} #hollow)
	#(#{Graphics.Brush class} #ltGray)
	#(#{Graphics.Canvas} #origin:)
	#(#{Graphics.Canvas} #setBkMode:)
	#(#{Graphics.Canvas} #setTextColor:)
	#(#{Graphics.Color} #asARGB)
	#(#{Graphics.Color} #asIndexedColor)
	#(#{Graphics.Color} #saturation)
	#(#{Graphics.Color class} #buttonFace)
	#(#{Graphics.ColorNone} #saturation)
	#(#{Graphics.ColorRef} #asIndexedColor)
	#(#{Graphics.ColorRef} #asIndexedColorUsingPalette:)
	#(#{Graphics.ImageList class} #width:height:flags:size:growthGranularity:)
	#(#{Graphics.IndexedColor} #asIndexedColor)
	#(#{Graphics.RGB} #asIndexedColorUsingPalette:)
	#(#{Graphics.RGB class} #stdColor:)
	#(#{Graphics.SystemColor} #asIndexedColor)
	#(#{Graphics.SystemColor class} #fromId:)
	#(#{Graphics.TextTileIcon class} #text:font:color:)
	#(#{Graphics.VirtualColor} #asIndexedColor)
	#(#{OS.BLENDFUNCTION} #beAlpha)
	#(#{OS.BLENDFUNCTION} #beNotAlpha)
	#(#{OS.LVBKIMAGEW} #offset:)
	#(#{OS.SystemMetrics} #hasFlashWindow)
	#(#{OS.SystemMetrics} #hasMenuImages)
	#(#{OS.UserLibrary} #winHelp:lpszHelp:uCommand:dwData:)
	#(#{Smalltalk.Brush class} #dkGray)
	#(#{Smalltalk.Brush class} #hatchedDiagonal)
	#(#{Smalltalk.Brush class} #hollow)
	#(#{Smalltalk.Brush class} #ltGray)
	#(#{Smalltalk.Canvas} #origin:)
	#(#{Smalltalk.Canvas} #setBkMode:)
	#(#{Smalltalk.Canvas} #setTextColor:)
	#(#{Smalltalk.Color} #asARGB)
	#(#{Smalltalk.Color} #asIndexedColor)
	#(#{Smalltalk.Color} #saturation)
	#(#{Smalltalk.Color class} #buttonFace)
	#(#{Smalltalk.ScintillaIndicator} #type)
	#(#{Smalltalk.ScintillaIndicatorStyle} #alphaPercent)
	#(#{Smalltalk.ScintillaIndicatorStyle} #alphaPercent:)
	#(#{Smalltalk.ScintillaIndicatorStyle} #hoverStyleName)
	#(#{Smalltalk.ScintillaIndicatorStyle} #hoverStyleName:)
	#(#{Smalltalk.ScintillaIndicatorStyle} #styleName)
	#(#{Smalltalk.ScintillaIndicatorStyle} #styleName:)
	#(#{Smalltalk.ScintillaIndicatorStyle class} #styleNames)
	#(#{Smalltalk.ScintillaView} #highlightRange:withIndicator:)
	#(#{Smalltalk.ScintillaView} #indicatorDefinitions:)
	#(#{Smalltalk.ScintillaView} #isKeyboardInputUnicode)
	#(#{Smalltalk.ScintillaView} #isKeyboardInputUnicode:)
	#(#{Smalltalk.TextTileIcon class} #text:font:color:)
	#(#{UI.AcceleratorTable} #accelerators)
	#(#{UI.AcceleratorTable} #addKey:commandDescription:)
	#(#{UI.AcceleratorTable class} #keyModifierNames:)
	#(#{UI.AcceleratorTable class} #keyModifierNames:do:)
	#(#{UI.BasicListAbstract} #basicSelectionByIndex:)
	#(#{UI.BorderLayout} #hasCenter)
	#(#{UI.BorderLayout} #hasEast)
	#(#{UI.BorderLayout} #hasNorth)
	#(#{UI.BorderLayout} #hasSouth)
	#(#{UI.BorderLayout} #hasWest)
	#(#{UI.ChoicePresenter class} #resource_Multiselection_list_box)
	#(#{UI.Clipboard} #getObjectBinaryStoreBytes)
	#(#{UI.Clipboard} #getObjectBinaryStoreBytesIfNone:)
	#(#{UI.Clipboard} #setText:format:)
	#(#{UI.GUISessionManager} #whatsThis:)
	#(#{UI.ListBox} #basicSelectionByIndex:)
	#(#{UI.ListModel} #updateAtIndex:)
	#(#{UI.ListModel} #updateItem:)
	#(#{UI.ListModel} #updateItem:ifAbsent:)
	#(#{UI.ListPresenter class} #resource_Multiselection_enhanced_list_view)
	#(#{UI.ListPresenter class} #resource_Multiselection_list_box)
	#(#{UI.ListView} #autoArrange)
	#(#{UI.ListView} #autoArrange:)
	#(#{UI.ListView} #columns)
	#(#{UI.ListView} #hasTrackSelect)
	#(#{UI.ListView} #hasTrackSelect:)
	#(#{UI.MoenTreeView} #updateItem:andChildren:imagesOnly:)
	#(#{UI.PaintEvent class} #handle:wParam:hdc:paintStruct:)
	#(#{UI.ScrollingDecorator} #continuousTracking)
	#(#{UI.ScrollingDecorator} #continuousTracking:)
	#(#{UI.ShellView} #hasThickFrame)
	#(#{UI.ShellView} #hasThickFrame:)
	#(#{UI.Slider} #hasTicksBoth)
	#(#{UI.Slider} #hasTicksBoth:)
	#(#{UI.Slider} #hasTicksTopOrLeft)
	#(#{UI.Slider} #hasTicksTopOrLeft:)
	#(#{UI.Slider} #selection)
	#(#{UI.Slider} #selection:)
	#(#{UI.STBViewProxy} #for:)
	#(#{UI.STBViewProxy class} #for:)
	#(#{UI.TextEdit} #find:range:down:wholeWord:matchCase:)
	#(#{UI.TextEdit} #findNextWrapped:down:wholeWord:matchCase:)
	#(#{UI.TextEdit} #isLowercase)
	#(#{UI.TextEdit} #isLowercase:)
	#(#{UI.TextEdit} #isNumeric)
	#(#{UI.TextEdit} #isNumeric:)
	#(#{UI.TextEdit} #isUpperCase)
	#(#{UI.TextEdit} #isUppercase:)
	#(#{UI.TextEdit} #lines)
	#(#{UI.TreeView} #disableExpandAll)
	#(#{UI.TreeView} #disableExpandAll:)
	#(#{UI.TypeConverter} #leftExceptionalValue)
	#(#{UI.TypeConverter} #leftExceptionalValue:)
	#(#{UI.TypeConverter} #rightExceptionalValue)
	#(#{UI.TypeConverter} #rightExceptionalValue:)
	#(#{UI.View} #defaultWindowProcessing:)
	#(#{UI.View} #hasWindowEdge)
	#(#{UI.View} #hasWindowEdge:)
	#(#{UI.View} #winHelpPopup:topic:)
	#(#{UI.View} #winHelpPopup:topic:at:)
	#(#{UI.WindowsEvent class} #message:handle:wParam:lParam:)
).

package setVariableNames: #(
	#{Smalltalk.CheckedPushButton}
	#{Smalltalk.CompositePresenter}
	#{Smalltalk.MultipleChoicePresenter}
	#{Smalltalk.StaticViewAbstract}
	#{Smalltalk.WinImageList}
).

package setAliasVariableNames: #(
	#{Smalltalk.CheckedPushButton}
	#{Smalltalk.CompositePresenter}
	#{Smalltalk.MultipleChoicePresenter}
	#{Smalltalk.StaticViewAbstract}
	#{Smalltalk.WinImageList}
).

package setPrerequisites: #(
	'..\..\Base\Dolphin'
	'..\Base\Dolphin Basic Geometry'
	'..\Presenters\Choice\Dolphin Choice Presenter'
	'..\Views\Common Controls\Dolphin Common Controls'
	'..\Models\List\Dolphin List Models'
	'..\Presenters\List\Dolphin List Presenter'
	'..\Views\MoenTree\Dolphin MoenTree View'
	'..\Base\Dolphin MVP Base'
	'..\Views\Scintilla\Dolphin Scintilla View'
	'..\Views\Scrollbars\Dolphin Scrollbars'
	'..\Views\Slider\Dolphin Slider Control'
	'..\Presenters\Text\Dolphin Text Presenter'
	'..\Icons\Dolphin Text Tile Icons'
	'..\Type Converters\Dolphin Type Converters'
).

package!

"Class Definitions"!

Core.Object subclass: #ComparisonPolicy
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
External.Library subclass: #Msimg32Library
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.ListBox subclass: #MultipleSelectionListBox
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.ListView subclass: #MultipleSelectionListView
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

"Variable Aliases"!

Smalltalk.CheckedPushButton := UI.PushButton!

Smalltalk.CompositePresenter := UI.Presenter!

Smalltalk.MultipleChoicePresenter := UI.ChoicePresenter!

Smalltalk.StaticViewAbstract := UI.StaticView!

Smalltalk.WinImageList := Graphics.ImageList!


"Loose Methods"!

!Graphics.ARGB methodsFor!

asARGB
	Notification deprecated.	"Generally speaking it should not be necessary to convert colours explicitly to ARGB representation, rather any Color should be accepted and converted at the point of passing to an external API if needed."
	^self! !
!Graphics.ARGB categoriesFor: #asARGB!converting!public! !

!Graphics.Brush class methodsFor!

dkGray
	Notification deprecated.
	^self darkGray!

hatchedDiagonal
	"Answer a new sub-instance of the receiver for painting diagonal hatching."

	Notification deprecated.
	^HatchBrush diagonal!

hollow
	Notification deprecated.	"Same as transparent"
	^self transparent!

ltGray
	"Answer the stock light grey brush."

	Notification deprecated.
	^self silver! !
!Graphics.Brush class categoriesFor: #dkGray!instance creation!public! !
!Graphics.Brush class categoriesFor: #hatchedDiagonal!instance creation!public! !
!Graphics.Brush class categoriesFor: #hollow!instance creation!public! !
!Graphics.Brush class categoriesFor: #ltGray!instance creation!public! !

!Graphics.Canvas methodsFor!

origin: aPoint
	Notification deprecated.	"5.0: Use #viewportOrigin:"
	^self viewportOrigin: aPoint!

setBkMode: mode
	Notification deprecated.
	^self backgroundMode: mode!

setTextColor: colour
	Notification deprecated.	"6.0 (reprise)"
	^self forecolor: colour! !
!Graphics.Canvas categoriesFor: #origin:!operations!public! !
!Graphics.Canvas categoriesFor: #setBkMode:!modes!public! !
!Graphics.Canvas categoriesFor: #setTextColor:!modes!public! !

!Graphics.Color methodsFor!

asARGB
	Notification deprecated.	"Generally speaking it should not be necessary to convert colours explicitly to ARGB representation, rather any Color should be accepted and converted at the point of passing to an external API if needed."
	^self argbClass fromArgbCode: self argbCode!

asIndexedColor
	"Answer the receiver as an <IndexedColor>."

	"IndexedColors are soft-deprecated. You should avoid their deliberate use, although they may continue to exist in older view resources, etc, and be returned from certain older APIs."

	Notification deprecated.
	^self asRGB asIndexedColor!

saturation
	"Ambiguous as to the color model - this is actually the HLS saturation."

	Notification deprecated.
	^self asRGB hls at: 3! !
!Graphics.Color categoriesFor: #asARGB!converting!public! !
!Graphics.Color categoriesFor: #asIndexedColor!converting!public! !
!Graphics.Color categoriesFor: #saturation!accessing!public! !

!Graphics.Color class methodsFor!

buttonFace
	Notification deprecated.
	^Color face3d! !
!Graphics.Color class categoriesFor: #buttonFace!instance creation!public! !

!Graphics.ColorNone methodsFor!

saturation
	Notification deprecated.
	^0! !
!Graphics.ColorNone categoriesFor: #saturation!public! !

!Graphics.ColorRef methodsFor!

asIndexedColor
	"Answer the receiver as an <IndexedColor> mapped using the default palette."

	"IndexedColors are soft-deprecated. You should avoid their deliberate use, although they may continue to exist in older view resources, etc, and be returned from certain older APIs."

	Notification deprecated.
	^self asIndexedColorUsingPalette: self defaultPalette!

asIndexedColorUsingPalette: hPalette
	"Answer the receiver as the nearest <IndexedColour> using hPalette"

	^self asRGB asIndexedColorUsingPalette: hPalette! !
!Graphics.ColorRef categoriesFor: #asIndexedColor!converting!public! !
!Graphics.ColorRef categoriesFor: #asIndexedColorUsingPalette:!converting!public! !

!Graphics.ImageList class methodsFor!

width: cx height: cy flags: flags size: sizeInteger growthGranularity: growthInteger
	"Answer a new instances with the given parameters."

	#deprecated.
	^self 
		newExtent: cx @ cy
		depth: flags
		initialSize: sizeInteger
		growBy: growthInteger
		masked: false! !
!Graphics.ImageList class categoriesFor: #width:height:flags:size:growthGranularity:!instance creation!public! !

!Graphics.IndexedColor methodsFor!

asIndexedColor
	"Answer the receiver as an <IndexedColor>."

	"IndexedColors are soft-deprecated. You should avoid their deliberate use, although they may continue to exist in older view resources, etc, and be returned from certain older APIs."

	Notification deprecated.
	^self! !
!Graphics.IndexedColor categoriesFor: #asIndexedColor!converting!public! !

!Graphics.RGB methodsFor!

asIndexedColorUsingPalette: hPalette
	"Answer the receiver as an IndexedColour using hPalette"

	| index |
	Notification deprecated.
	index := GDILibrary default getNearestPaletteIndex: hPalette crColor: self asCOLORREF.
	^index < 0
		ifTrue: [GDILibrary default systemError]
		ifFalse: [IndexedColor withIndex: (index bitOr: 16r1000000)]! !
!Graphics.RGB categoriesFor: #asIndexedColorUsingPalette:!converting!public! !

!Graphics.RGB class methodsFor!

stdColor: aSymbol
	Notification deprecated.
	^self named: aSymbol! !
!Graphics.RGB class categoriesFor: #stdColor:!instance creation!public! !

!Graphics.SystemColor methodsFor!

asIndexedColor
	"Answer the receiver as an <IndexedColor>."

	"IndexedColors are soft-deprecated. You should avoid their deliberate use, although they may continue to exist in older view resources, etc, and be returned from certain older APIs."

	Notification deprecated.
	^(Color fromRgbCode: self rgbCode) asIndexedColor! !
!Graphics.SystemColor categoriesFor: #asIndexedColor!converting!public! !

!Graphics.SystemColor class methodsFor!

fromId: anInteger
	Notification deprecated.
	^self withIndex: anInteger! !
!Graphics.SystemColor class categoriesFor: #fromId:!instance creation!public! !

!Graphics.TextTileIcon class methodsFor!

text: labelString font: fontString color: aColor
	Notification deprecated.
	^self
		text: labelString
		fontName: fontString
		color: aColor! !
!Graphics.TextTileIcon class categoriesFor: #text:font:color:!instance creation!public! !

!Graphics.VirtualColor methodsFor!

asIndexedColor
	"Answer the receiver as an <IndexedColor>."

	"IndexedColors are soft-deprecated. You should avoid their deliberate use, although they may continue to exist in older view resources, etc, and be returned from certain older APIs."

	Notification deprecated.
	^self actualColor asIndexedColor! !
!Graphics.VirtualColor categoriesFor: #asIndexedColor!converting!public! !

!OS.BLENDFUNCTION methodsFor!

beAlpha
	#deprecated.
	self usePerPixelAlpha: true!

beNotAlpha
	#deprecated.
	self usePerPixelAlpha: false! !
!OS.BLENDFUNCTION categoriesFor: #beAlpha!accessing!public! !
!OS.BLENDFUNCTION categoriesFor: #beNotAlpha!accessing!public! !

!OS.LVBKIMAGEW methodsFor!

offset: aPoint
	Notification deprecated.	"Use #offsetPercent: or #offsetTile:"
	self
		xOffsetPercent: aPoint x;
		yOffsetPercent: aPoint y! !
!OS.LVBKIMAGEW categoriesFor: #offset:!public! !

!OS.SystemMetrics methodsFor!

hasFlashWindow
	"Answer whether the host supports the FlashWindowEx API."

	#deprecated.
	^true!

hasMenuImages
	"Answer whether the host supports images on menus."

	#deprecated. "We no longer support OSs earlier than Vista, let alone XP."
	^true! !
!OS.SystemMetrics categoriesFor: #hasFlashWindow!capability enquiries!public! !
!OS.SystemMetrics categoriesFor: #hasMenuImages!capability enquiries!public! !

!OS.UserLibrary methodsFor!

winHelp: hwndMain lpszHelp: lpszHelp uCommand: uCommand dwData: dwData
	"Invoke the WinHelp() function of the module wrapped by the receiver.
	Helpstring: Starts windows help and passes a request for help

		BOOL __stdcall WinHelp(
			HWND hwndMain,
			LPCSTR lpszHelp,
			unsigned int uCommand,
			ULONG_PTR dwData);"

	<stdcall: bool WinHelpA handle lpstr dword uintptr>
	^self invalidCall: _failureCode! !
!OS.UserLibrary categoriesFor: #winHelp:lpszHelp:uCommand:dwData:!**auto generated**!public! !

!ScintillaIndicator methodsFor!

type
	Notification deprecated.
	^self styleName! !
!ScintillaIndicator categoriesFor: #type!accessing!public! !

!ScintillaIndicatorStyle methodsFor!

alphaPercent
	"Answer an <integer> representing the percentage alpha (transparency) for the indicator.
	Note that this is a percentage (hence the name), and not the usual 0..255 range. Zero
	represents completely transparent, 100 completely opaque. Note that this is currently only
	relevant for the #roundBox indicator style."

	#deprecated.
	^self alpha ifNil: [30] ifNotNil: [:a | a * 100 // SC_ALPHA_OPAQUE]!

alphaPercent: anInteger 
	"Set the percentage alpha (transparency) for the indicator to the <integer> argument. Note
	that this is a percentage (hence the name), and not the usual 0..255 range. Zero represents
	completely transparent, 100 completely opaque. Note that this is currently only relevant for
	the #roundBox indicator style."

	#deprecated.
	self alpha: SC_ALPHA_OPAQUE * anInteger // 100!

hoverStyleName
	Notification deprecated.
	^self hoverStyle!

hoverStyleName: aSymbol
	Notification deprecated.
	self hoverStyle: aSymbol!

styleName
	Notification deprecated.
	^self style!

styleName: aSymbol
	Notification deprecated.
	self style: aSymbol! !
!ScintillaIndicatorStyle categoriesFor: #alphaPercent!accessing!public! !
!ScintillaIndicatorStyle categoriesFor: #alphaPercent:!accessing!public! !
!ScintillaIndicatorStyle categoriesFor: #hoverStyleName!accessing!public! !
!ScintillaIndicatorStyle categoriesFor: #hoverStyleName:!accessing!public! !
!ScintillaIndicatorStyle categoriesFor: #styleName!accessing!public! !
!ScintillaIndicatorStyle categoriesFor: #styleName:!accessing!public! !

!ScintillaIndicatorStyle class methodsFor!

styleNames
	Notification deprecated.
	^IndicatorStyles! !
!ScintillaIndicatorStyle class categoriesFor: #styleNames!initializing!public! !

!ScintillaView methodsFor!

highlightRange: anInterval withIndicator: idInteger 
	"Apply the indicator identified by the <integer> argument to the range of text
	specified by the <Interval> argument."

	#deprecated.
	self setIndicator: idInteger range: anInterval!

indicatorDefinitions: aSequenceableCollection 
	#deprecated.
	self indicatorStyles: aSequenceableCollection!

isKeyboardInputUnicode
	"Are keys always interpreted as Unicode?"

	#deprecated.
	^this
		ifNil: [false]
		ifNotNil: 
			[(Library
				directFunction: this
				msg: SCI_GETKEYSUNICODE
				wParam: 0
				lParam: 0) asBoolean]!

isKeyboardInputUnicode: keysUnicodeBoolean
	"Deprecated in 3.5.5 Always interpret keyboard input as Unicode"

	#deprecated.
	this
		ifNotNil: 
			[Library
				directFunction: this
				msg: SCI_SETKEYSUNICODE
				wParam: keysUnicodeBoolean asParameter
				lParam: 0]! !
!ScintillaView categoriesFor: #highlightRange:withIndicator:!indicators!public! !
!ScintillaView categoriesFor: #indicatorDefinitions:!indicators!public! !
!ScintillaView categoriesFor: #isKeyboardInputUnicode!**auto generated**!other settings!public!scintilla interface!testing! !
!ScintillaView categoriesFor: #isKeyboardInputUnicode:!**auto generated**!other settings!public!scintilla interface! !

!UI.AcceleratorTable methodsFor!

accelerators
	#deprecated.
	^commands associations!

addKey: vKeyCode commandDescription: aCommandDescription 
	#deprecated.
	aCommandDescription acceleratorKey: vKeyCode.
	self addCommand: aCommandDescription! !
!UI.AcceleratorTable categoriesFor: #accelerators!accessing!public! !
!UI.AcceleratorTable categoriesFor: #addKey:commandDescription:!adding!public! !

!UI.AcceleratorTable class methodsFor!

keyModifierNames: anInteger
	Notification deprecated.
	^self keyModifierNames: anInteger keyboard: Keyboard default!

keyModifierNames: anInteger do: aMonadicValuable
	Notification deprecated.
	self
		keyModifierNames: anInteger
		keyboard: Keyboard default
		do: aMonadicValuable! !
!UI.AcceleratorTable class categoriesFor: #keyModifierNames:!enquiries!public! !
!UI.AcceleratorTable class categoriesFor: #keyModifierNames:do:!enquiries!public! !

!UI.BasicListAbstract methodsFor!

basicSelectionByIndex: anInteger 
	#deprecated.	"Present for loading of old view resources"
	self setSingleSelection: anInteger! !
!UI.BasicListAbstract categoriesFor: #basicSelectionByIndex:!private!selection! !

!UI.BorderLayout methodsFor!

hasCenter
	"Answer whether a view has been arranged to the centre of the layout."

	^self center notNil!

hasEast
	"Answer whether a view has been arranged to the left edge."

	^self east notNil!

hasNorth
	"Answer whether a view has been arranged to the top edge."

	^self north notNil!

hasSouth
	"Answer whether a view has been arranged to the bottom edge."

	^self south notNil!

hasWest
	"Answer whether a view has been arranged to the right edge."

	^self west notNil! !
!UI.BorderLayout categoriesFor: #hasCenter!accessing!public! !
!UI.BorderLayout categoriesFor: #hasEast!accessing!public! !
!UI.BorderLayout categoriesFor: #hasNorth!accessing!public! !
!UI.BorderLayout categoriesFor: #hasSouth!accessing!public! !
!UI.BorderLayout categoriesFor: #hasWest!accessing!public! !

!UI.ChoicePresenter class methodsFor!

resource_Multiselection_list_box
	"Answer the literal data from which the 'Multiselection list box' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_Multiselection_list_box)
	"

	^#(#'!!STL' 4 985166 10 ##(UI.STBViewProxy) ##(Smalltalk.MultipleSelectionListBox) 34 17 nil nil 34 2 8 1412499713 1025 416 787270 2 ##(UI.ListModel) 138 144 8 #() nil 1638406 ##(Kernel.IdentitySearchPolicy) 917510 ##(Graphics.Color) #default nil 5 nil nil nil 416 nil 8 1920482304 786950 ##(Core.Message) #displayString 8 #() 8 #() false 1310982 ##(Core.MessageSequence) 138 144 34 3 1049350 ##(Core.MessageSend) #createAt:extent: 34 2 655878 ##(Graphics.Point) 6143 21 802 251 351 416 754 #caretIndex: 8 #(1) 416 754 #horizontalExtent: 8 #(0) 416 1179910 ##(OS.WINDOWPLACEMENT) 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 11 0 0 10 0 0 0 124 12 0 0 185 0 0 0] 8 #() 802 193 193 nil 27)! !
!UI.ChoicePresenter class categoriesFor: #resource_Multiselection_list_box!public!resources-views! !

!UI.Clipboard methodsFor!

getObjectBinaryStoreBytes
	"Answer the STB binary store bytes for the <object> stored on the the clipboard, or raise an
	exception if none is available."

	Notification deprecated.
	^self getObjectBinaryStoreBytesIfNone: [self errorFormatNotAvailable: #Object]!

getObjectBinaryStoreBytesIfNone: exceptionHandler
	"Answer the STB binary store bytes for an <object> stored on the clipboard. If no object is
	currently available, the answers the result of evaluating the <niladicValuable>
	exceptionHandler."

	Notification deprecated.
	^(self getObjectIfNone: [^exceptionHandler value]) binaryStoreBytes!

setText: text format: formatName
	Notification deprecated.	"Just use setData:format:"
	self setRegisteredFormat: formatName data: text! !
!UI.Clipboard categoriesFor: #getObjectBinaryStoreBytes!accessing!public! !
!UI.Clipboard categoriesFor: #getObjectBinaryStoreBytesIfNone:!accessing!public! !
!UI.Clipboard categoriesFor: #setText:format:!accessing!public! !

!UI.GUISessionManager methodsFor!

whatsThis: object
	| helpId |
	#deprecated.	"The Windows Help program is no longer supported on Windows 10 and later."
	helpId := object helpId.
	View active winHelpPopup: self popupHelpFile topic: helpId! !
!UI.GUISessionManager categoriesFor: #whatsThis:!commands!public! !

!UI.ListBox methodsFor!

basicSelectionByIndex: sel
	#deprecated.	"Presenter for old view resources"
	self basicSelectionsByIndex: sel! !
!UI.ListBox categoriesFor: #basicSelectionByIndex:!private!selection! !

!UI.ListModel methodsFor!

updateAtIndex: anInteger 
	"Update, and answer, an object in the receiver at anInteger index because 
	it's contents have changed. If anInteger index does not exist in the list 
	then raise a suitable exception. Answer anObject."

	| elem |
	#deprecated.	"Use #refreshAtIndex:"
	elem := self list at: anInteger.
	self notifyItem: elem updatedAtIndex: anInteger.
	^elem!

updateItem: anObject
	#deprecated.	"Use #refresh:"
	^self refresh: anObject!

updateItem: anObject ifAbsent: exceptionHandler
	#deprecated.	"Use #refresh:ifAbsent:"
	^self refresh: anObject ifAbsent: exceptionHandler! !
!UI.ListModel categoriesFor: #updateAtIndex:!public!updating! !
!UI.ListModel categoriesFor: #updateItem:!private!updating! !
!UI.ListModel categoriesFor: #updateItem:ifAbsent:!public!searching! !

!UI.ListPresenter class methodsFor!

resource_Multiselection_enhanced_list_view
	"Answer the literal data from which the 'Multiselection enhanced list view' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_Multiselection_enhanced_list_view)
	"

	^#(#'!!STL' 3 788558 10 ##(STBViewProxy) 8 ##(Smalltalk.MultipleSelectionListView) 98 30 0 0 98 2 8 1140920393 1025 416 590662 2 ##(ListModel) 202 208 98 0 0 1114638 ##(STBSingletonProxy) 8 ##(SearchPolicy) 8 #identity 524550 ##(ColorRef) 8 4278190080 0 7 0 0 0 416 0 8 4294902987 459270 ##(Message) 8 #displayString 98 0 8 ##(IconicListAbstract) 570 8 ##(IconImageManager) 8 #current 0 0 0 0 0 0 202 208 98 1 920646 5 ##(ListViewColumn) 8 'Column 1' 201 8 #left 690 720 736 8 ##(SortedCollection) 0 0 416 0 1 0 0 8 #report 544 0 131169 0 0 983302 ##(MessageSequence) 202 208 98 2 721670 ##(MessageSend) 8 #createAt:extent: 98 2 328198 ##(Point) 11 11 1090 401 397 416 1026 8 #text: 98 1 8 'Column 1' 416 983302 ##(WINDOWPLACEMENT) 8 #[44 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 5 0 0 0 5 0 0 0 205 0 0 0 203 0 0 0] 98 0 1090 193 193 0 27)!

resource_Multiselection_list_box
	"Answer the literal data from which the 'Multiselection list box' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_Multiselection_list_box)
	"

	^#(#'!!STL' 3 788558 10 ##(STBViewProxy) 8 ##(Smalltalk.MultipleSelectionListBox) 98 17 0 0 98 2 8 1144064257 1025 416 590662 2 ##(ListModel) 202 208 98 0 0 1114638 ##(STBSingletonProxy) 8 ##(SearchPolicy) 8 #identity 524550 ##(ColorRef) 8 4278190080 0 7 0 0 0 416 0 8 4294903705 459270 ##(Message) 8 #displayString 98 0 544 32 983302 ##(MessageSequence) 202 208 98 2 721670 ##(MessageSend) 8 #createAt:extent: 98 2 328198 ##(Point) 11 11 882 251 351 416 818 8 #horizontalExtent: 98 1 1 416 983302 ##(WINDOWPLACEMENT) 8 #[44 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 5 0 0 0 5 0 0 0 130 0 0 0 180 0 0 0] 98 0 882 193 193 0 27)! !
!UI.ListPresenter class categoriesFor: #resource_Multiselection_enhanced_list_view!public!resources-views! !
!UI.ListPresenter class categoriesFor: #resource_Multiselection_list_box!public!resources-views! !

!UI.ListView methodsFor!

autoArrange
	#deprecated.
	^self isAutoArranged!

autoArrange: aBoolean 
	#deprecated.
	self isAutoArranged: aBoolean!

columns
	#deprecated. "5.0"
	^self allColumns copyFrom: 2!

hasTrackSelect
	#deprecated. "6.0"
	^self hasHotTracking!

hasTrackSelect: aBoolean 
	#deprecated. "6.0"
	self hasHotTracking: aBoolean! !
!UI.ListView categoriesFor: #autoArrange!arranging!public! !
!UI.ListView categoriesFor: #autoArrange:!accessing-styles!public! !
!UI.ListView categoriesFor: #columns!columns!public! !
!UI.ListView categoriesFor: #hasTrackSelect!accessing-styles!public! !
!UI.ListView categoriesFor: #hasTrackSelect:!accessing-styles!public! !

!UI.MoenTreeView methodsFor!

updateItem: element andChildren: andChildren imagesOnly: aBoolean 
	#deprecated.
	self 
		invalidateItem: element
		andChildren: andChildren
		imagesOnly: aBoolean! !
!UI.MoenTreeView categoriesFor: #updateItem:andChildren:imagesOnly:!painting!public! !

!UI.PaintEvent class methodsFor!

handle: hWnd wParam: wParam hdc: hdc paintStruct: ps
	#deprecated.
	^self
		window: (View fromHandle: hWnd)
		wParam: wParam
		hdc: hdc
		paintStruct: ps! !
!UI.PaintEvent class categoriesFor: #handle:wParam:hdc:paintStruct:!instance creation!public! !

!UI.ScrollingDecorator methodsFor!

continuousTracking
	#deprecated.
	^self isTrackingContinuous!

continuousTracking: aBoolean 
	#deprecated.
	self isTrackingContinuous: aBoolean! !
!UI.ScrollingDecorator categoriesFor: #continuousTracking!modes!public! !
!UI.ScrollingDecorator categoriesFor: #continuousTracking:!modes!public! !

!UI.ShellView methodsFor!

hasThickFrame
	#deprecated. "6.0: #1375"
	^self isResizable!

hasThickFrame: aBoolean 
	#deprecated. "6.0: #1375"
	self isResizable: aBoolean! !
!UI.ShellView categoriesFor: #hasThickFrame!accessing-styles!public! !
!UI.ShellView categoriesFor: #hasThickFrame:!accessing-styles!public! !

!UI.Slider methodsFor!

hasTicksBoth
	#deprecated.
	^self tickStyle == #bothSides!

hasTicksBoth: aBoolean 
	#deprecated.
	self tickStyle: (aBoolean ifTrue: [#bothSides] ifFalse: [#bottom])!

hasTicksTopOrLeft
	#deprecated.
	^#(#top #left) includes: self tickStyle!

hasTicksTopOrLeft: aBoolean 
	#deprecated.
	self tickStyle: (aBoolean ifTrue: [#top] ifFalse: [#bottom])!

selection
	Notification deprecated.
	^self selectionRange!

selection: anIntervalOrNil
	Notification deprecated.
	self selectionRange: anIntervalOrNil! !
!UI.Slider categoriesFor: #hasTicksBoth!accessing-styles!public!updating! !
!UI.Slider categoriesFor: #hasTicksBoth:!accessing-styles!public!updating! !
!UI.Slider categoriesFor: #hasTicksTopOrLeft!accessing-styles!public!updating! !
!UI.Slider categoriesFor: #hasTicksTopOrLeft:!accessing-styles!public!updating! !
!UI.Slider categoriesFor: #selection!accessing!public! !
!UI.Slider categoriesFor: #selection:!accessing!public! !

!UI.STBViewProxy methodsFor!

for: aView 
	#deprecated.
	self setView: aView! !
!UI.STBViewProxy categoriesFor: #for:!accessing!public! !

!UI.STBViewProxy class methodsFor!

for: aView 
	#deprecated.
	^self forView: aView! !
!UI.STBViewProxy class categoriesFor: #for:!instance creation!public! !

!UI.TextEdit methodsFor!

find: findWhat range: rangeInterval down: downBoolean wholeWord: wordBoolean matchCase: caseBoolean
	#deprecated.
	^(self find: (FindDetails new
				action: #findNext;
				findWhat: findWhat;
				isForwards: downBoolean;
				isWholeWord: wordBoolean;
				isCaseSensitive: caseBoolean;
				isRegularExpression: false;
				yourself)
		range: rangeInterval) start!

findNextWrapped: aString down: downBoolean wholeWord: wordBoolean matchCase: caseBoolean
	#deprecated.
	self findNextWrapped: (FindDetails new
				isForwards: downBoolean;
				isWholeWord: wordBoolean;
				isCaseSensitive: caseBoolean;
				isRegularExpression: false;
				action: #findNext;
				yourself)!

isLowercase
	#deprecated.	"6.0: Use #format"
	^self format == #lowercase!

isLowercase: aBoolean 
	#deprecated.	"6.0: Use #format"
	self format: #lowercase!

isNumeric
	#deprecated.	"6.0"
	^self format == #numeric!

isNumeric: aBoolean 
	#deprecated.	"6.0"
	self format: #numeric!

isUpperCase
	#deprecated.	"6.0: Use #format"
	^self format == #uppercase!

isUppercase: aBoolean 
	#deprecated.	"6.0: Use #format:"
	self format: #uppercase!

lines
	#deprecated. "5.0"
	^self lineCount! !
!UI.TextEdit categoriesFor: #find:range:down:wholeWord:matchCase:!private!searching & replacing! !
!UI.TextEdit categoriesFor: #findNextWrapped:down:wholeWord:matchCase:!public!searching & replacing! !
!UI.TextEdit categoriesFor: #isLowercase!public!testing! !
!UI.TextEdit categoriesFor: #isLowercase:!public!testing! !
!UI.TextEdit categoriesFor: #isNumeric!public!testing! !
!UI.TextEdit categoriesFor: #isNumeric:!accessing!public! !
!UI.TextEdit categoriesFor: #isUpperCase!public!testing! !
!UI.TextEdit categoriesFor: #isUppercase:!public!testing! !
!UI.TextEdit categoriesFor: #lines!accessing!public! !

!UI.TreeView methodsFor!

disableExpandAll
	#deprecated.
	^self isExpandAllEnabled not!

disableExpandAll: aBoolean 
	#deprecated.
	self isExpandAllEnabled: aBoolean not! !
!UI.TreeView categoriesFor: #disableExpandAll!accessing!public! !
!UI.TreeView categoriesFor: #disableExpandAll:!accessing!public! !

!UI.TypeConverter methodsFor!

leftExceptionalValue
	#deprecated.
	^self leftNullValue!

leftExceptionalValue: anObject
	#deprecated.
	^self leftNullValue: anObject!

rightExceptionalValue
	#deprecated.
	^self rightNullValue!

rightExceptionalValue: anObject
	#deprecated.
	^self rightNullValue: anObject! !
!UI.TypeConverter categoriesFor: #leftExceptionalValue!accessing!public! !
!UI.TypeConverter categoriesFor: #leftExceptionalValue:!accessing!public! !
!UI.TypeConverter categoriesFor: #rightExceptionalValue!accessing!public! !
!UI.TypeConverter categoriesFor: #rightExceptionalValue:!accessing!public! !

!UI.View methodsFor!

defaultWindowProcessing: anEvent
	#deprecated.
	^anEvent defaultWindowProcessing!

hasWindowEdge
	#deprecated.	"6.0: This style is automatically managed by Windows and changing it has no
			effect."
	^self exStyleAllMask: WS_EX_WINDOWEDGE!

hasWindowEdge: aBoolean 
	#deprecated.	"6.0: This style is automatically managed by Windows and changing it has no
			effect."
	(self exStyleMask: WS_EX_WINDOWEDGE set: aBoolean) ifTrue: [self frameChanged]!

winHelpPopup: helpFileString topic: topicId 
	#deprecated. "Not supported on Windows 10 and later."
	^self 
		winHelpPopup: helpFileString
		topic: topicId
		at: nil!

winHelpPopup: helpFileString topic: topicId at: aPointOrNil
	#deprecated.	"Not supported on Windows 10 and later."
	aPointOrNil notNil
		ifTrue: 
			[UserLibrary default
				winHelp: View active handle
				lpszHelp: ''
				uCommand: HELP_SETPOPUP_POS
				dwData: aPointOrNil asUIntPtr].
	^UserLibrary default
		winHelp: self handle
		lpszHelp: helpFileString
		uCommand: HELP_CONTEXTPOPUP
		dwData: topicId! !
!UI.View categoriesFor: #defaultWindowProcessing:!dispatching!public! !
!UI.View categoriesFor: #hasWindowEdge!accessing-styles!public! !
!UI.View categoriesFor: #hasWindowEdge:!accessing-styles!public! !
!UI.View categoriesFor: #winHelpPopup:topic:!public! !
!UI.View categoriesFor: #winHelpPopup:topic:at:!public! !

!UI.WindowsEvent class methodsFor!

message: msgInteger handle: wndHandle wParam: wInteger lParam: lInteger
	#deprecated.
	^self
		window: (View fromHandle: wndHandle)
		message: msgInteger
		wParam: wInteger
		lParam: lInteger! !
!UI.WindowsEvent class categoriesFor: #message:handle:wParam:lParam:!public! !

"End of package definition"!

