| package |
package := Package name: 'Dolphin Base Icons'.
package paxVersion: 2.1;
	preDeclareClassesOnLoad: false;
	basicComment: 'Dolphin Base Icons
Copyright (c) Object Arts Ltd, 2018.

This package extends base system classes to add icons.
'.


package setMethodNames: #(
	#(#{Core class} #icon)
	#(#{Core.ArithmeticValue class} #icon)
	#(#{Core.Array class} #icon)
	#(#{Core.Association class} #icon)
	#(#{Core.Bag class} #icon)
	#(#{Core.Behavior class} #icon)
	#(#{Core.Boolean class} #icon)
	#(#{Core.ByteArray class} #icon)
	#(#{Core.Character class} #icon)
	#(#{Core.Collection class} #icon)
	#(#{Core.Date class} #icon)
	#(#{Core.DateAndTime class} #icon)
	#(#{Core.Delay class} #icon)
	#(#{Core.Dictionary class} #icon)
	#(#{Core.Duration class} #icon)
	#(#{Core.Error class} #icon)
	#(#{Core.Exception class} #icon)
	#(#{Core.False class} #icon)
	#(#{Core.File class} #icon)
	#(#{Core.Float class} #icon)
	#(#{Core.Fraction class} #icon)
	#(#{Core.GUID class} #icon)
	#(#{Core.Integer class} #icon)
	#(#{Core.Interval class} #icon)
	#(#{Core.LargeInteger class} #icon)
	#(#{Core.Link class} #icon)
	#(#{Core.Locale class} #icon)
	#(#{Core.Magnitude class} #icon)
	#(#{Core.Message class} #icon)
	#(#{Core.MessageSendAbstract class} #icon)
	#(#{Core.MessageSequenceAbstract class} #icon)
	#(#{Core.Metaclass class} #icon)
	#(#{Core.Model class} #icon)
	#(#{Core.Mutex class} #icon)
	#(#{Core.Notification class} #icon)
	#(#{Core.NotificationSignal class} #icon)
	#(#{Core.Number class} #icon)
	#(#{Core.Process class} #icon)
	#(#{Core.ScaledDecimal class} #icon)
	#(#{Core.SearchPolicy class} #icon)
	#(#{Core.Semaphore class} #icon)
	#(#{Core.Set class} #icon)
	#(#{Core.Signal class} #icon)
	#(#{Core.SortAlgorithm class} #icon)
	#(#{Core.Sound class} #icon)
	#(#{Core.String class} #icon)
	#(#{Core.Symbol class} #icon)
	#(#{Core.Time class} #icon)
	#(#{Core.True class} #icon)
	#(#{Core.UndefinedObject class} #icon)
	#(#{Core.UtfEncodedString class} #icon)
	#(#{Core.Warning class} #icon)
	#(#{Core.WarningSignal class} #icon)
	#(#{Core.WeakArray class} #icon)
	#(#{External class} #icon)
	#(#{External.BOOL class} #icon)
	#(#{External.BOOLEAN class} #icon)
	#(#{External.Callback class} #icon)
	#(#{External.DOUBLE class} #icon)
	#(#{External.DynamicLinkLibrary class} #icon)
	#(#{External.ExternalArray class} #icon)
	#(#{External.FLOAT class} #icon)
	#(#{External.INTEGER class} #icon)
	#(#{External.Structure class} #icon)
	#(#{Graphics class} #icon)
	#(#{Graphics.Color} #icon)
	#(#{Graphics.ColorDefault} #icon)
	#(#{Graphics.Point class} #icon)
	#(#{Graphics.Rectangle class} #icon)
	#(#{Kernel class} #icon)
	#(#{Kernel.AbstractBindingReference class} #icon)
	#(#{Kernel.Announcement class} #icon)
	#(#{Kernel.BindingReference class} #icon)
	#(#{Kernel.BlockClosure class} #icon)
	#(#{Kernel.CompiledCode class} #icon)
	#(#{Kernel.CompileFailedMethod} #icon)
	#(#{Kernel.CompileFailedMethod class} #icon)
	#(#{Kernel.Compiler class} #icon)
	#(#{Kernel.CompilerNotification class} #icon)
	#(#{Kernel.DeadObject class} #icon)
	#(#{Kernel.DeafObject class} #icon)
	#(#{Kernel.InputState class} #icon)
	#(#{Kernel.MemoryManager class} #icon)
	#(#{Kernel.MetaBindingReference class} #icon)
	#(#{Kernel.MethodProtocol class} #icon)
	#(#{Kernel.Namespace class} #icon)
	#(#{Kernel.Package class} #icon)
	#(#{Kernel.PackageManager class} #icon)
	#(#{Kernel.ProcessorScheduler class} #icon)
	#(#{Kernel.SharedPool class} #icon)
	#(#{Kernel.SourceManager class} #icon)
	#(#{Kernel.VariableBinding} #icon)
	#(#{OS class} #icon)
	#(#{OS.DiskVolumeInformation class} #icon)
	#(#{OS.TIME_ZONE_INFORMATION class} #icon)
	#(#{Root class} #icon)
	#(#{Smalltalk class} #icon)
	#(#{Tools class} #icon)
	#(#{UI class} #icon)
	#(#{UI.AbstractCardContainer class} #icon)
	#(#{UI.BooleanPresenter class} #icon)
	#(#{UI.CardLabel class} #icon)
	#(#{UI.CheckButton class} #icon)
	#(#{UI.FramingLayout class} #icon)
	#(#{UI.Keyboard class} #icon)
	#(#{UI.LayoutManager class} #icon)
	#(#{UI.RadioButton class} #icon)
	#(#{UI.RadioButtonSetPresenter class} #icon)
	#(#{UI.ResourceIdentifier class} #icon)
).

package setPrerequisites: #(
	'..\..\Base\Dolphin'
	'..\..\System\Announcements\Dolphin Announcements'
	'..\Base\Dolphin Basic Geometry'
	'..\Presenters\Boolean\Dolphin Boolean Presenter'
	'..\Views\Cards\Dolphin Card Containers'
	'..\..\System\Win32\Dolphin File System Info'
	'..\..\Base\Dolphin Legacy Date & Time'
	'..\Base\Dolphin MVP Base'
	'..\Presenters\Radio\Dolphin Radio Buttons'
	'Dolphin Text Tile Icons'
).

package!

"Loose Methods"!

!Core class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Core class categoriesFor: #icon!constants!public! !

!Core.ArithmeticValue class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: $\x2182 fontName: 'Segoe UI')
		textcolor: Graphics.Color darkBlue;
		yourself)! !
!Core.ArithmeticValue class categoriesFor: #icon!constants!public! !

!Core.Array class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: '#()' fontName: 'Arial')
		textcolor: Graphics.Color darkBlue;
		yourself)! !
!Core.Array class categoriesFor: #icon!constants!public! !

!Core.Association class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: $\x1F86A)
		textcolor: Graphics.Color darkBlue;
		yourself)! !
!Core.Association class categoriesFor: #icon!constants!public! !

!Core.Bag class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: '⟅ ⟆' fontName: 'Cambria')
		textcolor: Graphics.Color darkBlue;
		yourself)! !
!Core.Bag class categoriesFor: #icon!constants!public! !

!Core.Behavior class methodsFor!

icon
	"Answers an Icon that can be used to represent this class."

	^##(self) defaultIcon! !
!Core.Behavior class categoriesFor: #icon!constants!public! !

!Core.Boolean class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Core.Boolean class categoriesFor: #icon!constants!public! !

!Core.ByteArray class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: '#[]' fontName: 'Arial')
		textcolor: Graphics.Color darkBlue;
		yourself)! !
!Core.ByteArray class categoriesFor: #icon!constants!public! !

!Core.Character class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: '$b' fontName: 'Cambria')
		textcolor: Graphics.Color darkBlue;
		yourself)! !
!Core.Character class categoriesFor: #icon!constants!public! !

!Core.Collection class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Core.Collection class categoriesFor: #icon!constants!public! !

!Core.Date class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Core.Date class categoriesFor: #icon!constants!public! !

!Core.DateAndTime class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Core.DateAndTime class categoriesFor: #icon!constants!public! !

!Core.Delay class methodsFor!

icon
	"Answers an Icon that can be used to represent this class. Here we use a constant expression 
	evaluated at compile time in order to statically bind 'self' at this position in the class hierarchy 
	(i.e. to Object). This ensures that subclasses which do not override this method still answer 
	'Object defaultIcon' rather than 'aSubclass defaultIcon'. Classes which provide their own default icon 
	can override this method with a similar implementation perhaps with #defaultIconFrom: if the icon comes
	from an ExternalResourceLibrary other than the system default."

	^##(self) defaultIcon! !
!Core.Delay class categoriesFor: #icon!constants!development!public! !

!Core.Dictionary class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Core.Dictionary class categoriesFor: #icon!constants!public! !

!Core.Duration class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Core.Duration class categoriesFor: #icon!constants!public! !

!Core.Error class methodsFor!

icon
	"Answer the default icon for the receiver and its instances."
	
	^Graphics.Icon error! !
!Core.Error class categoriesFor: #icon!constants!public! !

!Core.Exception class methodsFor!

icon
	"Answers an Icon that can be used to represent this class. Here we use a constant expression 
	evaluated at compile time in order to statically bind 'self' at this position in the class hierarchy 
	(i.e. to Object). This ensures that subclasses which do not override this method still answer 
	'Object defaultIcon' rather than 'aSubclass defaultIcon'. Classes which provide their own default icon 
	can override this method with a similar implementation perhaps with #defaultIconFrom: if the icon comes
	from an ExternalResourceLibrary other than the system default."

	^##(self) defaultIcon! !
!Core.Exception class categoriesFor: #icon!constants!public! !

!Core.False class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: $\x2716)
		textcolor: Graphics.Color red;
		yourself)! !
!Core.False class categoriesFor: #icon!constants!public! !

!Core.File class methodsFor!

icon
	"Answers an Icon that can be used to represent this class. "

	^##(self) defaultIcon! !
!Core.File class categoriesFor: #icon!constants!development!public! !

!Core.Float class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: '0.8' fontName: 'Cambria')
		textcolor: Graphics.Color darkBlue;
		yourself)! !
!Core.Float class categoriesFor: #icon!constants!public! !

!Core.Fraction class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: '⅞' fontName: 'Cambria')
		textcolor: Graphics.Color darkBlue;
		yourself)! !
!Core.Fraction class categoriesFor: #icon!constants!public! !

!Core.GUID class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Core.GUID class categoriesFor: #icon!constants!public! !

!Core.Integer class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: '42' fontName: 'Cambria')
		textcolor: Graphics.Color darkBlue;
		yourself)! !
!Core.Integer class categoriesFor: #icon!constants!public! !

!Core.Interval class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: '1..5' fontName: 'Cambria')
		textcolor: Graphics.Color darkBlue;
		yourself)! !
!Core.Interval class categoriesFor: #icon!constants!public! !

!Core.LargeInteger class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: $\x221E fontName: 'Cambria')
		textcolor: Graphics.Color darkBlue;
		yourself)! !
!Core.LargeInteger class categoriesFor: #icon!constants!public! !

!Core.Link class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(Graphics.TextTileIcon text: $\x1F517)! !
!Core.Link class categoriesFor: #icon!public! !

!Core.Locale class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Core.Locale class categoriesFor: #icon!constants!public! !

!Core.Magnitude class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: '|x|' fontName: 'Cambria')
		textcolor: Graphics.Color darkBlue;
		yourself)! !
!Core.Magnitude class categoriesFor: #icon!constants!public! !

!Core.Message class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Core.Message class categoriesFor: #icon!constants!public! !

!Core.MessageSendAbstract class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Core.MessageSendAbstract class categoriesFor: #icon!constants!public! !

!Core.MessageSequenceAbstract class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Core.MessageSequenceAbstract class categoriesFor: #icon!constants!public! !

!Core.Metaclass class methodsFor!

icon
	"Answers an Icon that can be used to represent this class. Here we use a constant expression 
	evaluated at compile time in order to statically bind 'self' at this position in the class hierarchy 
	(i.e. to Object). This ensures that subclasses which do not override this method still answer 
	'Object defaultIcon' rather than 'aSubclass defaultIcon'. Classes which provide their own default icon 
	can override this method with a similar implementation perhaps with #defaultIconFrom: if the icon comes
	from an ExternalResourceLibrary other than the system default."

	^##(self) defaultIcon! !
!Core.Metaclass class categoriesFor: #icon!constants!public! !

!Core.Model class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Core.Model class categoriesFor: #icon!constants!public! !

!Core.Mutex class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Core.Mutex class categoriesFor: #icon!constants!public! !

!Core.Notification class methodsFor!

icon
	"Answer the default icon for the receiver and its instances."

	^Graphics.Icon information! !
!Core.Notification class categoriesFor: #icon!constants!public! !

!Core.NotificationSignal class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^Notification icon! !
!Core.NotificationSignal class categoriesFor: #icon!constants!public! !

!Core.Number class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: $\x2116 fontName: 'Cambria')
		textcolor: Graphics.Color darkBlue;
		yourself)! !
!Core.Number class categoriesFor: #icon!constants!public! !

!Core.Process class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Core.Process class categoriesFor: #icon!constants!public! !

!Core.ScaledDecimal class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: '5⁹⁹' fontName: 'Segoe UI')
		textcolor: Graphics.Color darkBlue;
		yourself)! !
!Core.ScaledDecimal class categoriesFor: #icon!constants!public! !

!Core.SearchPolicy class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: $\x227E fontName: 'Cambria')
		textcolor: Graphics.Color darkBlue;
		yourself)! !
!Core.SearchPolicy class categoriesFor: #icon!constants!public! !

!Core.Semaphore class methodsFor!

icon
	^##((Graphics.TextTileIcon text: $\x1F6D1 fontName: 'Segoe UI Emoji')
		textcolor: Graphics.Color red;
		yourself)! !
!Core.Semaphore class categoriesFor: #icon!public! !

!Core.Set class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: '{ }' fontName: 'Cambria')
		textcolor: Graphics.Color darkBlue;
		yourself)! !
!Core.Set class categoriesFor: #icon!constants!public! !

!Core.Signal class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^Error icon! !
!Core.Signal class categoriesFor: #icon!constants!public! !

!Core.SortAlgorithm class methodsFor!

icon
	"Answers an Icon that can be used to represent this class. Here we use a constant expression 
	evaluated at compile time in order to statically bind 'self' at this position in the class hierarchy 
	(i.e. to Object). This ensures that subclasses which do not override this method still answer 
	'Object defaultIcon' rather than 'aSubclass defaultIcon'. Classes which provide their own default icon 
	can override this method with a similar implementation perhaps with #defaultIconFrom: if the icon comes
	from an ExternalResourceLibrary other than the system default."

	^##(self) defaultIcon! !
!Core.SortAlgorithm class categoriesFor: #icon!constants!public! !

!Core.Sound class methodsFor!

icon
	"Answers an Icon that can be used to represent this class. Here we use a constant expression 
	evaluated at compile time in order to statically bind 'self' at this position in the class hierarchy 
	(i.e. to Object). This ensures that subclasses which do not override this method still answer 
	'Object defaultIcon' rather than 'aSubclass defaultIcon'. Classes which provide their own default icon 
	can override this method with a similar implementation perhaps with #defaultIconFrom: if the icon comes
	from an ExternalResourceLibrary other than the system default."

	^##(self) defaultIcon! !
!Core.Sound class categoriesFor: #icon!constants!public! !

!Core.String class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: '‘A’' fontName: 'Cambria') textcolor: Graphics.Color darkBlue)! !
!Core.String class categoriesFor: #icon!constants!public! !

!Core.Symbol class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: '#S' fontName: 'Cambria')
		textcolor: Graphics.Color darkBlue;
		yourself)! !
!Core.Symbol class categoriesFor: #icon!constants!public! !

!Core.Time class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Core.Time class categoriesFor: #icon!constants!public! !

!Core.True class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	"Another potential choice here is ☑'"

	^##((Graphics.TextTileIcon text: $\x2714 fontName: 'Segoe UI Emoji')
		textcolor: Graphics.Color darkGreen;
		yourself)! !
!Core.True class categoriesFor: #icon!constants!public! !

!Core.UndefinedObject class methodsFor!

icon
	"Answers an Icon that can be used to represent this class."

	^##(Graphics.TextTileIcon text: $\x2622 fontName: 'Segoe UI Emoji')! !
!Core.UndefinedObject class categoriesFor: #icon!constants!public! !

!Core.UtfEncodedString class methodsFor!

icon
	"Answers an Icon that can be used to represent this class."

	^##((Graphics.TextTileIcon text: '‘U’' fontName: 'Cambria') textcolor: Graphics.Color darkBlue; yourself)! !
!Core.UtfEncodedString class categoriesFor: #icon!constants!public! !

!Core.Warning class methodsFor!

icon
	"Answer the default icon for the receiver and its instances."

	^Graphics.Icon warning! !
!Core.Warning class categoriesFor: #icon!constants!public! !

!Core.WarningSignal class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^Warning icon! !
!Core.WarningSignal class categoriesFor: #icon!constants!public! !

!Core.WeakArray class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: '#()' fontName: 'Arial')
		textcolor: Graphics.Color skyBlue;
		yourself)! !
!Core.WeakArray class categoriesFor: #icon!constants!public! !

!External class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!External class categoriesFor: #icon!constants!public! !

!External.BOOL class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^Boolean icon! !
!External.BOOL class categoriesFor: #icon!constants!public! !

!External.BOOLEAN class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^Boolean icon! !
!External.BOOLEAN class categoriesFor: #icon!constants!public! !

!External.Callback class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!External.Callback class categoriesFor: #icon!constants!public! !

!External.DOUBLE class methodsFor!

icon
	"Answer a suitable iconic representation for the receiver."

	^Float icon! !
!External.DOUBLE class categoriesFor: #icon!constants!public! !

!External.DynamicLinkLibrary class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!External.DynamicLinkLibrary class categoriesFor: #icon!constants!public! !

!External.ExternalArray class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^Array icon! !
!External.ExternalArray class categoriesFor: #icon!constants!public! !

!External.FLOAT class methodsFor!

icon
	"Answer a suitable iconic representation for the receiver."

	^Float icon! !
!External.FLOAT class categoriesFor: #icon!constants!public! !

!External.INTEGER class methodsFor!

icon
 	"Answers an Icon that can be used to represent this class"
 
	^Integer icon! !
!External.INTEGER class categoriesFor: #icon!constants!public! !

!External.Structure class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!External.Structure class categoriesFor: #icon!constants!public! !

!Graphics class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Graphics class categoriesFor: #icon!constants!public! !

!Graphics.Color methodsFor!

icon
	"Answer a dynamically generated icon to represent the receiver. Note that because Icons are
	typically placed into the IconImageManager, generating a large number of unique dynamic
	icons will inflate the size of the image manager. Should be okay to do this for Colors
	though."

	^TextTileIcon text: '' color: self! !
!Graphics.Color categoriesFor: #icon!accessing!public! !

!Graphics.ColorDefault methodsFor!

icon
	"Answer a dynamically generated icon to represent the receiver. Note that because Icons are
	typically placed into the IconImageManager, generating a large number of unique dynamic
	icons will inflate the size of the image manager. Should be okay to do this for Colors
	though."

	^TextTileIcon text: '' color: ColorRef defaultColorRepresentation! !
!Graphics.ColorDefault categoriesFor: #icon!public! !

!Graphics.Point class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((TextTileIcon text: $\x2316 fontName: 'Georgia')
		textcolor: Color darkBlue;
		yourself)! !
!Graphics.Point class categoriesFor: #icon!constants!public! !

!Graphics.Rectangle class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(TextTileIcon text: $\x25AD)! !
!Graphics.Rectangle class categoriesFor: #icon!constants!public! !

!Kernel class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Kernel class categoriesFor: #icon!constants!public! !

!Kernel.AbstractBindingReference class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: '#{}' fontName: 'Arial Narrow')
		textcolor: Graphics.Color darkBlue;
		fontStyle: #italic;
		yourself)! !
!Kernel.AbstractBindingReference class categoriesFor: #icon!constants!public! !

!Kernel.Announcement class methodsFor!

icon
	"Answers an Icon that can be used to represent this class."

	^##((Graphics.TextTileIcon text: $\x1F4E2)
		textcolor: Graphics.Color darkBlue;
		yourself)! !
!Kernel.Announcement class categoriesFor: #icon!constants!public! !

!Kernel.BindingReference class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: '#{}' fontName: 'Arial Narrow')
		textcolor: Graphics.Color darkBlue;
		yourself)! !
!Kernel.BindingReference class categoriesFor: #icon!constants!public! !

!Kernel.BlockClosure class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Kernel.BlockClosure class categoriesFor: #icon!constants!public! !

!Kernel.CompiledCode class methodsFor!

icon
	"Answer an Icon representing the receiver."

	^##(self) defaultIcon! !
!Kernel.CompiledCode class categoriesFor: #icon!constants!public! !

!Kernel.CompileFailedMethod methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^self class icon
! !
!Kernel.CompileFailedMethod categoriesFor: #icon!constants!public! !

!Kernel.CompileFailedMethod class methodsFor!

icon
	"Answer an Icon representing the receiver."

	^##(self) defaultIcon! !
!Kernel.CompileFailedMethod class categoriesFor: #icon!constants!public! !

!Kernel.Compiler class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Kernel.Compiler class categoriesFor: #icon!constants!development!public! !

!Kernel.CompilerNotification class methodsFor!

icon
	"Answer the default icon for the receiver and its instances."

	^self severityClass icon! !
!Kernel.CompilerNotification class categoriesFor: #icon!constants!public! !

!Kernel.DeadObject class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Kernel.DeadObject class categoriesFor: #icon!constants!development!public! !

!Kernel.DeafObject class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Kernel.DeafObject class categoriesFor: #icon!constants!development!public! !

!Kernel.InputState class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Kernel.InputState class categoriesFor: #icon!constants!public! !

!Kernel.MemoryManager class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Kernel.MemoryManager class categoriesFor: #icon!constants!development!public! !

!Kernel.MetaBindingReference class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((Graphics.TextTileIcon text: '#{}′' fontName: 'Arial Narrow')
		textcolor: Graphics.Color darkBlue;
		yourself)! !
!Kernel.MetaBindingReference class categoriesFor: #icon!constants!public! !

!Kernel.MethodProtocol class methodsFor!

icon
	"Answers an Icon that can be used to represent this class. Here we use a constant expression 
	evaluated at compile time in order to statically bind 'self' at this position in the class hierarchy 
	(i.e. to Object). This ensures that subclasses which do not override this method still answer 
	'Object defaultIcon' rather than 'aSubclass defaultIcon'. Classes which provide their own default icon 
	can override this method with a similar implementation perhaps with #defaultIconFrom: if the icon comes
	from an ExternalResourceLibrary other than the system default."

	^##(self) defaultIcon! !
!Kernel.MethodProtocol class categoriesFor: #icon!constants!public! !

!Kernel.Namespace class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Kernel.Namespace class categoriesFor: #icon!constants!public! !

!Kernel.Package class methodsFor!

icon
	"Answers an Icon that can be used to represent this class."

	^##(self) defaultIcon! !
!Kernel.Package class categoriesFor: #icon!constants!public! !

!Kernel.PackageManager class methodsFor!

icon
	"Answers an Icon that can be used to represent this class."

	^Package icon! !
!Kernel.PackageManager class categoriesFor: #icon!constants!public! !

!Kernel.ProcessorScheduler class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Kernel.ProcessorScheduler class categoriesFor: #icon!constants!public! !

!Kernel.SharedPool class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Kernel.SharedPool class categoriesFor: #icon!constants!public! !

!Kernel.SourceManager class methodsFor!

icon
	"Answers an Icon that can be used to represent this class. Here we use a constant expression 
	evaluated at compile time in order to statically bind 'self' at this position in the class hierarchy 
	(i.e. to Object). This ensures that subclasses which do not override this method still answer 
	'Object defaultIcon' rather than 'aSubclass defaultIcon'. Classes which provide their own default icon 
	can override this method with a similar implementation perhaps with #defaultIconFrom: if the icon comes
	from an ExternalResourceLibrary other than the system default."

	^##(self) defaultIcon! !
!Kernel.SourceManager class categoriesFor: #icon!constants!public! !

!Kernel.VariableBinding methodsFor!

icon
	^value icon! !
!Kernel.VariableBinding categoriesFor: #icon!constants!public! !

!OS class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!OS class categoriesFor: #icon!constants!public! !

!OS.DiskVolumeInformation class methodsFor!

icon
	"Answers an Icon that can be used to represent this class. Here we use a constant expression 
	evaluated at compile time in order to statically bind 'self' at this position in the class hierarchy 
	(i.e. to Object). This ensures that subclasses which do not override this method still answer 
	'Object defaultIcon' rather than 'aSubclass defaultIcon'. Classes which provide their own default icon 
	can override this method with a similar implementation perhaps with #defaultIconFrom: if the icon comes
	from an ExternalResourceLibrary other than the system default."

	^##(self) defaultIcon! !
!OS.DiskVolumeInformation class categoriesFor: #icon!constants!development!public! !

!OS.TIME_ZONE_INFORMATION class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!OS.TIME_ZONE_INFORMATION class categoriesFor: #icon!constants!public! !

!Root class methodsFor!

icon
	"Answers an Icon that can be used to represent this class."

	^##((Graphics.TextTileIcon text: $\x2130 fontName: 'Georgia')
		yourself)! !
!Root class categoriesFor: #icon!constants!public! !

!Smalltalk class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Smalltalk class categoriesFor: #icon!constants!public! !

!Tools class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!Tools class categoriesFor: #icon!constants!public! !

!UI class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^View icon! !
!UI class categoriesFor: #icon!constants!public! !

!UI.AbstractCardContainer class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((TextTileIcon
		text: $\x1F5C2
		fontName: 'Segoe UI Emoji'
		color: nil)
		textcolor: Color royalBlue;
		yourself)! !
!UI.AbstractCardContainer class categoriesFor: #icon!constants!public! !

!UI.BooleanPresenter class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((TextTileIcon text: $\x1F533 fontName: 'Segoe UI Emoji')
		textcolor: Color forestGreen;
		yourself)! !
!UI.BooleanPresenter class categoriesFor: #icon!constants!public! !

!UI.CardLabel class methodsFor!

icon
	"Answers an Icon that can be used to represent this class."

	^##((TextTileIcon text: $\x1F3F7 fontName: 'Segoe UI Emoji')
		textcolor: Color darkBlue;
		yourself)! !
!UI.CardLabel class categoriesFor: #icon!constants!public! !

!UI.CheckButton class methodsFor!

icon
	"Answers an Icon that can be used to represent this class."

	^##((TextTileIcon text: $\x2611 fontName: 'Segoe UI Emoji') textcolor: Color hotlight)! !
!UI.CheckButton class categoriesFor: #icon!constants!public! !

!UI.FramingLayout class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^(TextTileIcon text: $\x1F5BD)! !
!UI.FramingLayout class categoriesFor: #icon!constants!public! !

!UI.Keyboard class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!UI.Keyboard class categoriesFor: #icon!constants!public! !

!UI.LayoutManager class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(TextTileIcon text: $\x29C9 fontName: 'Cambria')! !
!UI.LayoutManager class categoriesFor: #icon!constants!public! !

!UI.RadioButton class methodsFor!

icon
	^##(TextTileIcon text: $\x29BF fontName: 'Cambria')! !
!UI.RadioButton class categoriesFor: #icon!constants!public! !

!UI.RadioButtonSetPresenter class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##((TextTileIcon text: $\x29BF fontName: 'Cambria') textcolor: Color forestGreen; yourself)! !
!UI.RadioButtonSetPresenter class categoriesFor: #icon!constants!public! !

!UI.ResourceIdentifier class methodsFor!

icon
	"Answers an Icon that can be used to represent this class"

	^##(self) defaultIcon! !
!UI.ResourceIdentifier class categoriesFor: #icon!constants!development!public! !

"End of package definition"!

